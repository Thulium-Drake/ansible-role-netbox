---
- name: 'Ensure dependencies'
  ansible.builtin.package:
    name:
      - 'redis'
      - 'gcc'
      - 'libxml2-devel'
      - 'libxslt-devel'
      - 'libffi-devel'
      - 'libpq-devel'
      - 'openssl-devel'
      - 'redhat-rpm-config'
      - 'python38'
    state: 'present'

- name: 'Ensure Redis service'
  ansible.builtin.service:
    name: 'redis'
    state: 'started'
    enabled: true

- name: 'Ensure Netbox system user'
  ansible.builtin.user:
    name: 'netbox'
    comment: 'Netbox Daemon'
    system: true

- name: 'Ensure Netbox Data folders'
  ansible.builtin.file:
    path: "{{ directory }}"
    state: 'directory'
    owner: 'netbox'
    group: 'netbox'
    mode: 0750
  loop:
    - '/opt/netbox-data/media'
    - '/opt/netbox-data/reports'
    - '/opt/netbox-data/scripts'
  loop_control:
    loop_var: 'directory'

- name: 'Ensure Netbox configuration'
  ansible.builtin.template:
    src: 'configuration.py.j2'
    dest: '/opt/netbox-data/configuration.py'
    owner: 'netbox'
    group: 'netbox'
    mode: 0600
  notify: 'restart netbox'

- name: 'Ensure NetBox sources'
  ansible.builtin.unarchive:
    src: "https://github.com/netbox-community/netbox/archive/v{{ netbox_version }}.tar.gz"
    dest: '/opt'
    remote_src: true
  register: netbox_sources_updated
  notify: 'restart netbox'

- name: 'Remove default directories'  # noqa no-handler
  ansible.builtin.file:
    path: "/opt/netbox-{{ netbox_version }}/netbox/{{ directory }}"
    state: 'absent'
  loop:
    - 'media'
    - 'reports'
    - 'scripts'
  loop_control:
    loop_var: 'directory'
  when: netbox_sources_updated['changed']

- name: 'Ensure symlinks'
  ansible.builtin.file:
    src: "{{ symlink['src'] }}"
    dest: "{{ symlink['dest'] }}"
    state: 'link'
    force: true
  loop:
    - src: "/opt/netbox-{{ netbox_version }}"
      dest: '/opt/netbox'
    - src: '/opt/netbox/contrib/gunicorn.py'
      dest: "/opt/netbox-{{ netbox_version }}/gunicorn.py"
    - src: '/opt/netbox-data/configuration.py'
      dest: "/opt/netbox-{{ netbox_version }}/netbox/netbox/configuration.py"
    - src: '/opt/netbox-data/media'
      dest: "/opt/netbox-{{ netbox_version }}/netbox/media"
    - src: '/opt/netbox-data/reports'
      dest: "/opt/netbox-{{ netbox_version }}/netbox/reports"
    - src: '/opt/netbox-data/scripts'
      dest: "/opt/netbox-{{ netbox_version }}/netbox/scripts"
  loop_control:
    loop_var: 'symlink'

- name: 'Run upgrade'  # noqa no-handler
  ansible.builtin.shell: |
    /opt/netbox-{{ netbox_version }}/upgrade.sh &> /opt/netbox-data/upgrade.log
  environment:
    PYTHON: '/usr/bin/python3.8'
  when: netbox_sources_updated['changed']
  notify: 'restart netbox'
  changed_when: true

- name: 'Ensure Netbox service files'
  ansible.builtin.copy:
    src: "/opt/netbox/contrib/{{ service }}.service"
    dest: "/etc/systemd/system/{{ service }}.service"
    owner: 'root'
    group: 'root'
    mode: 0644
    remote_src: true
  loop:
    - 'netbox'
    - 'netbox-rq'
  loop_control:
    loop_var: 'service'
  notify: 'restart netbox'

- name: 'Ensure Netbox services enabled'
  ansible.builtin.systemd:
    name: "{{ service }}"
    state: 'started'
    enabled: true
    daemon_reload: true
  loop:
    - 'netbox'
    - 'netbox-rq'
  loop_control:
    loop_var: 'service'

- name: 'Ensure housekeeping cronjob'
  ansible.builtin.cron:
    name: 'Netbox housekeeping'
    job: "/opt/netbox/contrib/netbox-housekeeping.sh"
    special_time: 'daily'
